[config]
default_to_workspace = false

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"
DRIVER_NAME = "elam_rs"
EXE_NAME = "ppl"
SERVICE_NAME = "win-service"
DRIVER_CRATE_NAME = "elam-rs"
VS_DEV_PROMPT = "\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\2019\\Professional\\VC\\Auxiliary\\Build\\vcvars64.bat\""

[env.development]
TARGET_PATH="${CARGO_MAKE_CRATE_TARGET_DIRECTORY}\\debug"

[env.production]
TARGET_PATH="${CARGO_MAKE_CRATE_TARGET_DIRECTORY}\\release"
BUILD_FLAGS = "--release"

[tasks.resources]
script = [
    "powershell .\\generate_cert.ps1",
    "move %DRIVER_NAME%.rc modules\\%DRIVER_CRATE_NAME%"
]

[tasks.format]
command = "cargo"
args = ["fmt"]

[tasks.build-driver]
dependencies = ["format"]
script = [
    "cargo build %BUILD_FLAGS% -p %DRIVER_CRATE_NAME%",
]

[tasks.rename]
cwd = "${TARGET_PATH}"
script = [
    "IF exist %DRIVER_NAME%.sys (del %DRIVER_NAME%.sys)",
    "rename %DRIVER_NAME%.dll %DRIVER_NAME%.sys"
]

[tasks.sign-driver]
dependencies = ["build-driver", "rename"]
script = [
    # Load the Visual Studio Developer environment
    "call %VS_DEV_PROMPT%",

    # Create a self signed certificate (only if not already done)
    "if not exist %DRIVER_NAME%.pfx ( echo You are missing of certificate ) else ( signtool.exe sign /fd SHA256 /a /v /ph /f %DRIVER_NAME%.pfx /p password /t http://timestamp.digicert.com %TARGET_PATH%/%DRIVER_NAME%.sys )",
]

[tasks.compile]
dependencies = ["format", "resources", "build-driver", "rename", "sign-driver"]
script = [
    "cargo build %BUILD_FLAGS% -p win-service-rs",
    "cargo build %BUILD_FLAGS%",
]

[tasks.sign]
script = [
    # Load the Visual Studio Developer environment
    "call %VS_DEV_PROMPT%",

    # Create a self signed certificate (only if not already done)
    "if not exist %DRIVER_NAME%.pfx ( echo You are missing of certificate ) else ( signtool.exe sign /fd SHA256 /a /v /ph /f %DRIVER_NAME%.pfx /p password /t http://timestamp.digicert.com %TARGET_PATH%/%DRIVER_NAME%.sys )",
    "if not exist %DRIVER_NAME%.pfx ( echo You are missing of certificate ) else ( signtool.exe sign /fd SHA256 /a /v /ph /f %DRIVER_NAME%.pfx /p password /t http://timestamp.digicert.com %TARGET_PATH%/%EXE_NAME%.exe )",
    "if not exist %DRIVER_NAME%.pfx ( echo You are missing of certificate ) else ( signtool.exe sign /fd SHA256 /a /v /ph /f %DRIVER_NAME%.pfx /p password /t http://timestamp.digicert.com %TARGET_PATH%/%SERVICE_NAME%.exe )",
]

[tasks.all]
condition = { platforms = ["windows"], fail_message = "Condition Failed." }

#dependencies = ["resources", "compile", "rename", "sign"]
#unfortunately dependencies not works well. We need to invoke compile with workspace = flag, but it's not possible
#in this way. Therefore I'm using ugly workaround
script = [
    "cargo make resources",
    "cargo make compile",
    "cargo make rename",
    "cargo make sign",
]


[tasks.rebuild]
dependencies = [
    "clean",
    "all",
]

[tasks.default]
alias = "all"